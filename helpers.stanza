; ====================
; A number of helpful functions to check your designs, export to CAD,
; update your design in CAD, etc.
; ====================
#use-added-syntax(jitx)
defpackage helpers :
  import core
  import jitx
  import jitx/commands

  ; TODO - PURGE OCDB
  import ocdb/utils/checks
  import ocdb/utils/generic-components

; ============
; setup-design
; ============
; TODO - Add Docstrings Here for function
public defn setup-design (name:String, board:Board
                          --
                          rules:Rules = ocdb/utils/defaults/default-rules
                          vendors:Tuple<String|AuthorizedVendor> = ocdb/utils/design-vars/APPROVED-DISTRIBUTOR-LIST
                          quantity:Int = ocdb/utils/design-vars/DESIGN-QUANTITY
                          bom-columns:Tuple<BOMColumn> = ocdb/utils/design-vars/BOM-COLUMNS) :
  set-current-design(name)
  set-board(board)
  ; TODO - this needs to be replaced with the fab support JLCPCB library
  set-rules(rules)
  ; TODO - We need to replace this with the new query api via the
  ;  `set-global-query-defaults!` function.
  set-bom-vendors(vendors)
  ; TODO - Use `set-global-query-defaults!` value of `quantity-needed`
  set-bom-design-quantity(quantity)
  ; TODO - remove dependency on OCDB - define columns in this file.
  set-bom-columns(bom-columns)

  set-paper(ANSI-B)
  set-export-backend(`kicad) 

; =====================
; Run the design checks
; =====================
public defn run-check-on-design (circuit:Instantiable) :
  val main-module = ocdb/utils/generator-utils/run-final-passes(circuit) ; Analyze design with a pass
  set-main-module(main-module) ; Treat the provided module as a design, and compile it.
  run-checks("checks.txt")

; ====================
; Actual Export design
; ====================
public defn export-to-cad () :
  export-cad([
    "vendor_part_numbers.lcsc" => "LCSC"
  ])

; ====================
; Export design to CAD
; ====================
public defn export-design () :
  set-export-board?(true)
  export-to-cad()

; ===================================
; Update CAD, keeping layout progress
; ===================================
public defn update-design () :
  set-export-board?(false)
  export-to-cad()

; =================
; Export BOM to tsv
; =================
public defn export-bill-of-materials () :
  export-bom()