; Generated by JITX 3.10.0
#use-added-syntax(jitx)
defpackage ethernet-io/main :
  import core
  import jitx
  import jitx/commands
  import jitx/parts/query-api

  import ethernet-io/helpers
  import ethernet-io/power

  import jlc-pcb/stackups/vias

  import jsl/symbols/net-symbols
  import jsl/si

  import jsl/protocols/ethernet/MII/RMII

; Define the shape/size of the board
; val board-shape = RoundedRectangle(70.0, 50.0, 0.25)
val board-shape = RoundedRectangle(170.0, 150.0, 0.25)


; Set the Global Query Defaults
set-global-query-defaults!(min-stock = 1, mounting = "smd", case = ["0402", "0603", "0805", "1206"])

; Module to run as a design
pcb-module top-level :

  inst pwr-mng : power-mng

  net V24 (pwr-mng.VIN.V+)
  symbol(V24) = PWR-SYMB

  net GND (pwr-mng.VIN.V-)
  symbol(GND) = GND-SYMB

  inst netsw : ethernet-io/network-switch/circuit(tented-filled-std-via)

  net (pwr-mng.VDD-3v3, netsw.VDD-3v3)
  net (pwr-mng.VDD-1v2, netsw.VDD-1v2)

  inst controller : ethernet-io/MCU/circuit
  net (pwr-mng.VDD-3v3, controller.rail-3v3)

  val rmii-cst = RMII-Constraint(jlc-pcb/stackups/JLC04161H-7628/se-50())
  constrain-topology(controller.mii => netsw.mii, rmii-cst)

  net MIIM (controller.mdio, netsw.management)

  ; Array Stuff

  inst cls : ethernet-io/current-loop/current-loop[10]

  for i in 0 to length(cls) do:
    net (GND, cls[i].pwr.V-)



setup-board("ethernet-io", board-shape, signal-shrink = 0.5)
set-main-module(top-level)

; View the results
; view-design-explorer()
; view-bom(BOM-STD)
view-schematic()
view-board()

