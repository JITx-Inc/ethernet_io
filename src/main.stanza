; Generated by JITX 3.10.0
#use-added-syntax(jitx)
defpackage ethernet-io/main :
  import core
  import jitx
  import jitx/commands
  import jitx/parts/query-api

  import ethernet-io/helpers
  import ethernet-io/power

  import jsl/circuits/ConfigStrap
  import jsl/symbols/net-symbols

; Define the shape/size of the board
val board-shape = RoundedRectangle(50.0, 30.0, 0.25)

; Set the Global Query Defaults
set-global-query-defaults!(min-stock = 1, mounting = "smd")

; Module to run as a design
pcb-module top-level :

  inst pwr-mng : power-mng

  net V24 (pwr-mng.VIN.V+)
  symbol(V24) = PWR-SYMB

  net GND (pwr-mng.VIN.V-)
  symbol(GND) = GND-SYMB

  inst netsw : ethernet_io_lib/components/KSZ9563/module

  net (pwr-mng.VDD-3v3, netsw.rail-analog, netsw.rail-IO)

  val pullup-R = create-resistor(resistance = 100.0e3, precision = (1 %))
  inst configs : ConfigStrap(
    num-elems = 4,
    comp = pullup-R,
    pack? = One(LongitudinalPacking(margin = 0.2))
  )
  net (configs.lo, GND)

  require straps:config-strap-bus(4) from configs

  net (straps.config[0], netsw.C.LED0[0])
  net (straps.config[1], netsw.C.LED0[1])
  net (straps.config[2], netsw.C.LED1[0])
  net (straps.config[3], netsw.C.LED1[1])

setup-design(
  "ethernet-io",
  ; TODO - this needs to be replaced with fab support JLCPCB library
  ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-jlc2313, board-shape)
)

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(top-level)

; View the results
view-schematic()
view-board()
; view-design-explorer()
; view-bom(BOM-STD)
